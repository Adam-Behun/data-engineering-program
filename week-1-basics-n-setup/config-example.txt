Create Dockerfile and pipeline.py

Postgres configuration

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    restart: always

Postgres configuration

I have a .csv dataset, now what?

- Use Docker as it allows me to use software tools outside of my local machine (tests, experiments, no harm to my machine)
- Load the .csv file into PostreSQL which runs in docker image using jupyter notebook (or any other way) 

Docker basic commands

- winpty docker run hello-world
- docker ps --> show running containers
- docker ps -a --> show all containers
- docker stop "container ID"
- docker start "container ID" 
- docker-compose


Code needed for the first configuration and run outside of docker-compose.yaml file

1. Run PostgreSQL in Docker
        winpty docker run -it \
          -e POSTGRES_USER="root" \
          -e POSTGRES_PASSWORD="root" \
          -e POSTGRES_DB="ny_taxi" \
          -v c://users//adamb//tech//data-engineering-zoomcamp//week-1-basics-n-setup//2-docker-sql//ny_taxi_postgres_data:/var/lib/postgresql/data \
          -p 5432:5432 \
        postgres:13

2. Connect to pgcli which is terminal-like interface for PostgreSQL
        winpty pgcli -h localhost -p 5432 -u root -d ny_taxi     

3. Insert csv data into into PostgreSQL using jupyter 

4. Use pgcli as a command line interface for PostgreSQL or switch to their GUI
   
5. Connect to pgadmin for a web-based PostgreSQL GUI

      winpty docker run -it \
        -e PGADMIN_DEFAULT_EMAIL="admin@admin.com" \
        -e PGADMIN_DEFAULT_PASSWORD="root" \
        -p 8080:80 \
        dpage/pgadmin4
  
6. In a browser search localhost:8080

7. docker network create "pg-network"
   
8. Then
   
      winpty docker run -it \
        -e POSTGRES_USER="root" \
        -e POSTGRES_PASSWORD="root" \
        -e POSTGRES_DB="ny_taxi"\\-v c://Users//adamb//tech//data-engineering-zoomcamp//week-1-basics-n-setup//2-docker-sql//ny_taxi_postgres_data:/var/lib/postgresql/data \
          -p 5432:5432 \
        --network=pg-network \
        --name pg-database \
      postgres:13

9.  Run pgAdmin
    
        winpty docker run -it \
            -e PGADMIN_DEFAULT_EMAIL="admin@admin.com" \
            -e PGADMIN_DEFAULT_PASSWORD="root" \
            -p 8080:80 \
            --network=pg-network \
            --name pgadmin \
        dpage/pgadmin4

Run the ingest_data file

python ingest_data.py \
    --user=root \
    --password=root \ 
    --host=localhost \
    --port=5432 \ 
    --db=ny_taxi \
    --table_name=yellow_taxi_trips \
    --url=https://github.com/DataTalksClub/nyc-tlc-data/releases/download/yellow/yellow_tripdata_2021-01.csv.gz \

Dockerize ingest_data file

winpty docker build -t taxi_ingest:v001 .

winpty docker run -it \
    --network=pg-network \
    taxi_ingest:v001 \
      --user=root \
      --password root \
      --host pg-database \
      --port 5432 \
      --db ny_taxi \
      --table_name yellow_taxi_trips \
      --url http://10.178.30.142:8000/yellow_tripdata_2021-01.csv \